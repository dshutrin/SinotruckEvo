# Generated by Django 5.1.1 on 2024-10-08 11:15

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('file_sharing_create_file_permission', models.BooleanField(default=False, verbose_name='Возможность создавать файлы в файлообменнике')),
                ('file_sharing_download_file_permission', models.BooleanField(default=False, verbose_name='Возможность скачивать файлы в файлообменнике')),
                ('file_sharing_create_folder_permission', models.BooleanField(default=False, verbose_name='Возможность создавать папки в файлообменнике')),
                ('file_sharing_delete_folder_permission', models.BooleanField(default=False, verbose_name='Возможность удалять папки в файлообменнике')),
                ('price_list_update_list_permission', models.BooleanField(default=False, verbose_name='Возможность обновлять прайс-лист')),
                ('price_list_download_list_permission', models.BooleanField(default=False, verbose_name='Возможность скачивать прайс-лист')),
                ('price_list_view_list_permission', models.BooleanField(default=False, verbose_name='Возможность просматривать прайс-лист')),
                ('trash_permission', models.BooleanField(default=False, verbose_name='Возможность добавлять товары в корзину и оставлять заявку заказов')),
                ('order_view_permission', models.BooleanField(default=False, verbose_name='Возможность просматривать заявки заказов')),
                ('activity_view_permission', models.ManyToManyField(to='support.role', verbose_name='Чью активность разрешено просматривать')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(default=None, max_length=150, unique=True, verbose_name='Имя пользователя')),
                ('email', models.EmailField(blank=True, default=None, max_length=254, null=True, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(default=None, max_length=150, null=True, verbose_name='Имя')),
                ('surname', models.CharField(blank=True, default=None, max_length=150, null=True, verbose_name='Фамилия')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('role', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='support.role', verbose_name='Роль')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'db_table': 'auth_user',
            },
        ),
    ]
